% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{accDegrad}
\alias{accDegrad}
\title{Compute the accumulated degradation at each time interval.
Accumulated Degradation (accDegrad)}
\usage{
accDegrad(dataH, dataV, alpha, beta, lambda, weight, rType, fType,
  onlyFinal = FALSE)
}
\arguments{
\item{dataH}{A matrix containing the horizontal vibration data.}

\item{dataV}{A matrix containing the vertival vibration data.}

\item{alpha}{A choosen constant value used when computing the R value. The R value takes into account the influence of the time.}

\item{beta}{A choosen constant value used when computing the F value. The F value takes into account the influence of the acceleration.}

\item{weight}{The weight must be less or equal to 1. It is the percent weight of the horizontal data.}

\item{rType}{The method used to compute the R value. See details for more details.}

\item{fType}{The method used to compute the F value. See details for more details.}

\item{onlyFinal}{Default to false. If true returns only the final accumulated degradtion value.}
}
\value{
A vector containing all the accumulated degradation values at each time interval.
}
\description{
Compute the accumulated degradation at each time interval.
Accumulated Degradation (accDegrad)
}
\details{
rType: \cr
"exp" = Exponential [R = e^(alpha*(t-i))] \cr
"Nexp" = Normalized Exponential [R = t*e^(alpha*(t-i)/[sum k(1:t)]e^(alpha(t-k)))] \cr
"poly1" = Polynomial 1 [R = (i/t)^alpha] \cr
"poly2" = Polynomial 2 [R = (t-i+1)^alpha] \cr
"Npoly1" = Normalized Polynomial 1 [R = t*(i/t)^alpha/[sum k(1:t)](i/t)^alpha] \cr
"Npoly2" = Normalized Polynomial 2 [R = t*(t-i+1)^alpha/[sum k(1:t)](t-i+1)^alpha]\cr \cr
fType: \cr
"poly" = Polynomial [F = V(i,j)^beta]
"Npoly" = Normalized Polynomial [F = ([sum j(1:data length)]V(i,j)^beta/datalength)^(1/beta)]
}

